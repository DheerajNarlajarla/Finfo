# ./apache/httpd.conf
#
# This is the main configuration file for our Apache HTTP Server (v2.4).
# It's a minimal configuration designed specifically for its role as a reverse proxy.

# Load essential modules required for proxying.
# mod_proxy is the main proxy module.
# mod_proxy_http adds support for proxying HTTP requests.
# mod_rewrite gives us the powerful URL rewriting engine.
LoadModule proxy_module modules/mod_proxy.so
LoadModule proxy_http_module modules/mod_proxy_http.so
LoadModule rewrite_module modules/mod_rewrite.so

# Set the server to listen on port 80, the standard port for HTTP.
# This is the port inside the container that we mapped to port 80 on your host machine.
Listen 80

# <VirtualHost> defines a virtual host, which allows you to run multiple websites
# on a single machine. Here, we define one for all incoming requests (*:80).
<VirtualHost *:80>

    # --- Proxy Configuration ---
    # These two lines are the core of our reverse proxy setup.

    # ProxyPass specifies a mapping from a path to a backend server.
    # The first argument "/" means "match all incoming requests".
    # The second argument "http://django_app:8000/" is the internal Docker network
    # address of our Django container. 'django_app' is the service name from our
    # docker-compose.yml file, and 8000 is the port Gunicorn is listening on.
    ProxyPass / http://django_app:8000/

    # ProxyPassReverse is a companion to ProxyPass. It rewrites the headers
    # on response packets from the backend server. This is important for ensuring
    # that redirects and other location-based headers work correctly from the
    # user's perspective.
    ProxyPassReverse / http://django_app:8000/

    # --- Logging Configuration ---
    # We define how and where to log access and error information.

    # ErrorLog specifies the file where server errors will be logged.
    # We're piping it to /proc/self/fd/2, which is the standard error stream.
    # This makes the logs visible directly through `docker-compose logs apache`.
    ErrorLog /proc/self/fd/2

    # CustomLog defines the format and location for the access log.
    # We're also piping this to the standard output stream (/proc/self/fd/1)
    # for easy viewing with `docker-compose logs`. The "common" format is a standard, predefined format.
    CustomLog /proc/self/fd/1 common

</VirtualHost>
